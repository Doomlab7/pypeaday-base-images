# This is a basic workflow to help you get started with Actions

name: Build Docs with Markata in CI
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches:
      - "*"
      # do not trigger ci when pushing gh-pages step
      - "!prod-markata"
    paths:
      - 'markata-docs/**'
      - '.github/workflows/ci-markata-docs.yml'
  pull_request:
    branches:
      - "main"
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-and-deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./markata-docs
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - uses: actions/setup-python@v3
        name: Set up Python 3.10
        with:
          python-version: '3.10'

      - name: install hatch
        run: pip install hatch

      - name: build with markata
        run: hatch run build

      - name: echo working directory
        run: echo $PWD

      - name: Setup Pages
        uses: actions/configure-pages@v2
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: './markata-docs/markout'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

      # - name: GitHub Pages
      #   uses: crazy-max/ghaction-github-pages@v3.0.0
      #   with:
      #     # you can choose the target branch of your choice
      #     target_branch: prod-markata
      #     build_dir: ./markata-docs/markout
      #     jekyll: false
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BASE_VERSION: ${{ github.ref_name }}-${{ github.run_id }}-${{ github.run_number }}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3

      # From https://docs.docker.com/build/ci/github-actions/examples/#share-built-image-between-jobs
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: ./markata-docs
          file: ./markata-docs/Dockerfile
          build-args: |
            BASE_VERSION=${{env.BASE_VERSION}}
          tags: |
            markata-docs-latest
          outputs: type=docker,dest=/tmp/myimage.tar

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: myimage
          path: /tmp/myimage.tar

  push:
    runs-on: ubuntu-latest
    env:
      # NOTE: this is duplicated in the build step since GH Actions doesn't
      # support setting env variables at the Workflow level that can be
      # accessed in a Job
      BASE_VERSION: ${{ github.ref_name }}-${{ github.run_id }}-${{ github.run_number }}
    needs: [build-and-deploy, docker]
    steps:
      # From https://docs.docker.com/build/ci/github-actions/examples/#share-built-image-between-jobs
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: myimage
          path: /tmp

      - name: Load and tag image
        run: |
          docker load --input /tmp/myimage.tar
          docker image ls -a

      - name: Push dev branch
        run: |
          docker tag markata-docs-latest pypeaday/dev-base-images:markata-docs-${{env.BASE_VERSION}}
          docker push pypeaday/dev-base-images:markata-docs-${{env.BASE_VERSION}}
        # TODO: More general if condition
        if: ${{ github.ref == 'refs/heads/integration' }}

      - name: Push main tag
        run: |
          docker tag markata-docs-latest pypeaday/base-images:markata-docs-${{env.BASE_VERSION}}
          docker push pypeaday/base-images:markata-docs-${{env.BASE_VERSION}}
        if: ${{ github.ref == 'refs/heads/main' }}

      - name: Push latest
        run: |
          docker tag markata-docs-latest pypeaday/base-images:markata-docs-latest
          docker push pypeaday/base-images:markata-docs-latest
        if: ${{ github.ref == 'refs/heads/main' }}
